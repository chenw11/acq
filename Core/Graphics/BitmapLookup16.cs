using System;

namespace eas_lab.gui
{
    /// <summary>
    /// Provides a bitmap generated by using a lookup table on 16-bit data
    /// </summary>
    public unsafe class BitmapLookup16 : BitmapLookupBase<ushort>
    {
        public BitmapLookup16(int width, int height) : base(width, height) { }

        /// <summary>
        /// Rebuilds the entire Bitmap by mapping DataBuffer through LookupTable.
        /// InteropBitmap.Invalidate() is called at the end of this method, so any bound Image controls
        /// will be updated.
        /// </summary>
        public override void Remap()
        {
            fixed (ushort* pGray = gray)
            fixed (uint* pLut = lut)
                Map(pGray, pLut, bgr32, gray.Length);
        }

        static void Map(ushort* pGray, uint* pLut, uint* pBgr32, int length)
        {
            var bgr32End = pBgr32 + length;

            while (pBgr32 < bgr32End)
            {
                ushort grayValue = *pGray++;
                *pBgr32++ = pLut[grayValue];
            }
        }

    }
}
